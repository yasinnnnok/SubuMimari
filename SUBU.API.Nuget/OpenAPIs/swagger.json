{
  "openapi": "3.0.1",
  "info": {
    "title": "WebApp 99 API",
    "version": "v1"
  },
  "paths": {
    "/Account/login": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Address": {
      "get": {
        "tags": [
          "Address"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Address"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Album": {
      "get": {
        "tags": [
          "Album"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Album"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Artist/List": {
      "get": {
        "tags": [
          "Artist"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistQueryIEnumerableResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistQueryIEnumerableResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistQueryIEnumerableResponseResult"
                }
              }
            }
          }
        }
      }
    },
    "/Artist/Find/{id}": {
      "get": {
        "tags": [
          "Artist"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistQueryResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistQueryResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistQueryResponseResult"
                }
              }
            }
          }
        }
      }
    },
    "/Artist/Create": {
      "post": {
        "tags": [
          "Artist"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistQueryResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistQueryResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistQueryResponseResult"
                }
              }
            }
          }
        }
      }
    },
    "/Artist/Update/{id}": {
      "put": {
        "tags": [
          "Artist"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistQueryResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistQueryResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistQueryResponseResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              }
            }
          }
        }
      }
    },
    "/Artist/UpdateAlive/{id}": {
      "patch": {
        "tags": [
          "Artist"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistAliveUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistAliveUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistAliveUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistQueryResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistQueryResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistQueryResponseResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              }
            }
          }
        }
      }
    },
    "/Artist/Remove/{id}": {
      "delete": {
        "tags": [
          "Artist"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectResponseResult"
                }
              }
            }
          }
        }
      }
    },
    "/Category": {
      "get": {
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Category/{id}": {
      "delete": {
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Location/Get/{id}": {
      "get": {
        "tags": [
          "Location"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Location/Remove": {
      "delete": {
        "tags": [
          "Location"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Product/GetByName/{name}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Product/Create": {
      "post": {
        "tags": [
          "Product"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddressCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "additionalProperties": false
      },
      "AlbumCreate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ArtistAliveUpdate": {
        "type": "object",
        "properties": {
          "isAlive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ArtistCreate": {
        "required": [
          "name",
          "surname"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "surname": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ArtistQuery": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "isAlive": {
            "type": "boolean",
            "nullable": true
          },
          "isAliveStr": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ArtistQueryIEnumerableResponseResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArtistQuery"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ArtistQueryResponseResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/ArtistQuery"
          }
        },
        "additionalProperties": false
      },
      "ArtistUpdate": {
        "required": [
          "name",
          "surname"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "surname": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "isAlive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "productCount": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Location": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LoginModel": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectResponseResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "desc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 1safsfsdfdfd\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}